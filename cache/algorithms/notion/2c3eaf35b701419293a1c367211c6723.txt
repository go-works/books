1310 1566839369191 httpcache-v1
Method: POST
URL: https://www.notion.so/api/v3/getRecordValues
Body:+110
{
  "requests": [
    {
      "id": "2c3eaf35-b701-4192-93a1-c367211c6723",
      "table": "block"
    }
  ]
}
Response:+1110
{
  "results": [
    {
      "role": "comment_only",
      "value": {
        "alive": true,
        "content": [
          "01ea435d-3116-42dd-b3db-7c7d4f06fcec",
          "c06f3002-9185-41bc-b61d-b149e4cb8b79",
          "18b4b197-455e-463c-9e76-e7374ea12282",
          "17676924-eb1e-4963-b720-75759745e921",
          "5b4a678c-99b6-483d-8065-0982c25d3758"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1551928036671,
        "format": {
          "page_full_width": true,
          "page_small_text": true
        },
        "id": "2c3eaf35-b701-4192-93a1-c367211c6723",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1551928036671,
        "parent_id": "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Detecting a cycle in a directed graph using Depth First Traversal"
            ]
          ]
        },
        "type": "page",
        "version": 3
      }
    }
  ]
}
14453 1566839369191 httpcache-v1
Method: POST
URL: https://www.notion.so/api/v3/loadPageChunk
Body:+152
{
  "chunkNumber": 0,
  "cursor": {
    "stack": []
  },
  "limit": 50,
  "pageId": "2c3eaf35-b701-4192-93a1-c367211c6723",
  "verticalColumns": false
}
Response:+14212
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "01ea435d-3116-42dd-b3db-7c7d4f06fcec": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928036668,
          "id": "01ea435d-3116-42dd-b3db-7c7d4f06fcec",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1551928036668,
          "parent_id": "2c3eaf35-b701-4192-93a1-c367211c6723",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A cycle in a directed graph exists if thereâ€™s a back edge discovered during a DFS. A back edge is an edge from a node to itself or one of the ancestors in a DFS tree. For a disconnected graph, we get a DFS forest, so you have to iterate through all vertices in the graph to find disjoint DFS trees."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "039ec42e-e62f-412e-983e-6d5b6b201b60": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "91fee7b5-614e-44ac-9c69-2c43b78c7706",
            "1b2f4c66-4ea6-4d7b-a266-531792730534",
            "6eb693f8-f70b-45c9-a6db-644dea3bc144",
            "ee1a4539-5889-4a51-bc45-1ed4ce501170",
            "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
            "0483f45c-fa31-493e-bd1b-b9e924123210",
            "e737c451-edb2-4ee1-8b50-4891f751f559",
            "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b",
            "c8277fc4-6841-459e-81f4-c90a99fd83fa",
            "adfec1cf-4941-4483-b98d-9550de7e3916",
            "2bfd570f-dc07-4daa-b3b2-a794ef12f08e",
            "a034d8c3-224b-46dc-bc26-d44b569e39e0",
            "8c1be630-50c9-4162-b355-a5d6917f9e65",
            "56228e72-edf0-4f14-b6c7-1d113093b22a",
            "2885c26f-5511-47a5-900d-5d725326f99d",
            "e800516e-b244-4000-89c7-0041f1acd148",
            "7c62ae2d-e334-4dc4-a641-184b79672747",
            "ec9d0bba-8ded-4256-866e-28adfde6676e",
            "f00ac53f-26f5-4356-bd05-744ca9c233b1",
            "07b6aee1-86e2-4b06-9533-93f2f24dd419",
            "3104f50a-b7e2-41fe-97d7-f6e02201ccb8",
            "aed1f400-b221-4067-80e6-2fda841c33f0",
            "a747cf00-d05a-4132-9b34-4cea62968a38",
            "0abdd157-bda8-4285-b8a7-5aa4dd7e132b",
            "e79c088d-5ede-4b22-b5dc-16273a672796",
            "721fb53c-f240-4ce6-aaaa-9f4be08c3460",
            "38ae0e5d-81ea-45b2-b7f4-8eb197662514",
            "c06d75d6-1a6d-48da-8e09-4d63502dedee",
            "3cca89f6-4b6c-48b0-957b-2efc26b23041",
            "db10fdd2-ea0b-4236-ae14-94781b2f7586",
            "9bd5a67d-2c30-4b51-a6b7-b9eb3583b888",
            "29a89f00-863f-4084-8ec5-db4c455fc788",
            "2734ccd8-075a-412f-8976-e67dfd9416da",
            "a5ee9280-35d0-4aac-89a2-decbe44f483e",
            "790101e3-fd8c-47e3-bcc4-54b18dc2fd9a",
            "aa2725ad-e1d1-40ed-ab4f-0042fe8e222f",
            "7261d2a3-9d9d-43cb-9e3a-4b432a018d9e",
            "7e7202cf-172e-479e-b1d4-2842091d8b3e",
            "ee364118-8538-4817-87be-3e716db337cb",
            "4ee11beb-a38d-47e3-8227-7414b7e09239",
            "f82e52a5-bc15-4106-8c59-2d323c6aa2f1",
            "547abd24-965c-44ce-b5f0-e452aeea3821",
            "d33782ab-d4ee-4ba9-938d-2922e11247be",
            "0c0e3472-dac8-416a-833b-40ef5e725f54",
            "c677c530-6036-4f08-810c-5e2b963b6ded",
            "d1c46e3a-31cb-41e0-acf1-907b405548a3",
            "24e66a7f-c2cb-4c77-b424-5e08b603ee59",
            "15b863c2-28b5-4b31-9379-ff8091b43c28",
            "5eb1332d-741d-47f8-ad4c-da01f28ef2ed",
            "88259ac2-4526-4ea5-b9e9-d03f7dd06c8e",
            "0652a44d-8a63-47b5-b7cf-af85d0c3655a",
            "61f46cc6-d7e0-4aeb-ae8a-47f4eb52c2bc",
            "a3747844-afb9-4883-bbb2-bea5662e919d",
            "e567adff-577f-4fa6-849a-1a112f689048",
            "c96af0be-a3eb-4385-a674-0f83049a23fd",
            "1357e166-4a61-43ab-a4f0-d9cbd7ba53de",
            "e7f85180-91d1-4075-8feb-5b5f495422a9",
            "2a8a00f4-a540-41b4-87f7-465c42e6a071",
            "f11f3084-c84d-4f6e-91d0-8c55df0d8c59",
            "491070bf-06ff-4de8-bf7f-3e121c11c49f",
            "2a95e83b-1c1e-40d2-b8e0-8917aa02703e",
            "a30ef162-2edd-4b12-90d7-25d5049ed098",
            "eaba21c7-6ac1-482f-bdc2-9410e7140b3d",
            "1f7d7534-a522-4df6-a495-44f1c3e4179d",
            "924ef53c-fe52-4d0f-8233-1cbc0f7eb8f7"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928257468,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1553726040000,
          "parent_id": "d79ccaee-4168-4c48-920b-7005c81675ea",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            },
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [
              [
                "Essential Algorithms"
              ]
            ]
          },
          "type": "page",
          "version": 131
        }
      },
      "17676924-eb1e-4963-b720-75759745e921": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928036670,
          "id": "17676924-eb1e-4963-b720-75759745e921",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1551928036670,
          "parent_id": "2c3eaf35-b701-4192-93a1-c367211c6723",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Result: As shown below, there are three back edges in the graph. One between vertex 0 and 2; between vertice 0, 1, and 2; and vertex 3. Time complexity of search is O(V+E) where V is the number of vertices and E is the number of edges."
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      },
      "18b4b197-455e-463c-9e76-e7374ea12282": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928036670,
          "id": "18b4b197-455e-463c-9e76-e7374ea12282",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1551928036670,
          "parent_id": "2c3eaf35-b701-4192-93a1-c367211c6723",
          "parent_table": "block",
          "properties": {
            "language": [
              [
                "Plain Text"
              ]
            ],
            "title": [
              [
                "#include \u003ciostream\u003e\n #include \u003clist\u003e\n    \nusing namespace std; \n\n#define NUM_V   4\n\nbool helper(list\u003cint\u003e *graph, int u, bool* visited, bool* recStack)\n{\n    visited[u]=true;\n    recStack[u]=true;\n    list\u003cint\u003e::iterator i;\n    for(i = graph[u].begin();i!=graph[u].end();++i)\n    {  \n        if(recStack[*i]) //if vertice v is found in recursion stack of this DFS traversal\n            return true;\n        else if(*i==u) //if there's an edge from the vertex to itself\n            return true;\n        else if(!visited[*i])\n        {   if(helper(graph, *i, visited, recStack))\n               return true;\n        }\n    }\n    recStack[u]=false;\n    return false;\n}\n/*\n/The wrapper function calls helper function on each vertices which have not been visited. Helper function returns true if it detects a back edge in the subgraph(tree) or false.\n*/\nbool isCyclic(list\u003cint\u003e *graph, int V)\n{\n  bool visited[V];  //array to track vertices already visited\n  bool recStack[V]; //array to track vertices in recursion stack of the traversal.\n\n  for(int i = 0;i\u003cV;i++)\n   visited[i]=false, recStack[i]=false;  //initialize all vertices as not visited and not recursed\n\n  for(int u = 0; u \u003c V; u++) //Iteratively checks if every vertices have been visited\n  {   if(visited[u]==false)\n      {  if(helper(graph, u, visited, recStack)) //checks if the DFS tree from the vertex contains a cycle\n           return true;\n      }\n  }\n   return false;\n}\n/*\nDriver function\n*/\nint main()\n{\n    list\u003cint\u003e* graph = new list\u003cint\u003e[NUM_V];\n    graph[0].push_back(1);\n    graph[0].push_back(2);\n    graph[1].push_back(2);\n    graph[2].push_back(0);\n    graph[2].push_back(3);\n    graph[3].push_back(3);\n    bool res = isCyclic(graph, NUM_V);\n    cout\u003c\u003cres\u003c\u003cendl;\n}"
              ]
            ]
          },
          "type": "code",
          "version": 1
        }
      },
      "2c3eaf35-b701-4192-93a1-c367211c6723": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "01ea435d-3116-42dd-b3db-7c7d4f06fcec",
            "c06f3002-9185-41bc-b61d-b149e4cb8b79",
            "18b4b197-455e-463c-9e76-e7374ea12282",
            "17676924-eb1e-4963-b720-75759745e921",
            "5b4a678c-99b6-483d-8065-0982c25d3758"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928036671,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "2c3eaf35-b701-4192-93a1-c367211c6723",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1551928036671,
          "parent_id": "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Detecting a cycle in a directed graph using Depth First Traversal"
              ]
            ]
          },
          "type": "page",
          "version": 3
        }
      },
      "5b4a678c-99b6-483d-8065-0982c25d3758": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928036671,
          "id": "5b4a678c-99b6-483d-8065-0982c25d3758",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1551928036671,
          "parent_id": "2c3eaf35-b701-4192-93a1-c367211c6723",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "/tmp/896cd583-6fc3-4b49-803d-4c44885ff5e3/1cc12f68ed6442df0387b0a87d306ad13b209cd0.png"
              ]
            ]
          },
          "type": "image",
          "version": 1
        }
      },
      "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "ce408308-0ae4-41fd-a4f8-260224091736",
            "b13998b5-b067-4f37-9fb6-20dddf0e7a58",
            "9184a602-2abc-4385-b018-0506bd2bbbf1",
            "34b65db4-7505-4522-94d9-4cb83b66fc19",
            "9d0749b8-3d4c-421f-905a-126e7c94fae1",
            "486d99fd-8dd5-4f72-99ba-e89337abf789",
            "2c3eaf35-b701-4192-93a1-c367211c6723"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928020000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1551928320000,
          "parent_id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [
              [
                "Graphs"
              ]
            ]
          },
          "type": "page",
          "version": 23
        }
      },
      "c06f3002-9185-41bc-b61d-b149e4cb8b79": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_time": 1551928036670,
          "id": "c06f3002-9185-41bc-b61d-b149e4cb8b79",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_time": 1551928036670,
          "parent_id": "2c3eaf35-b701-4192-93a1-c367211c6723",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "C++ implementation:"
              ]
            ]
          },
          "type": "text",
          "version": 1
        }
      }
    },
    "notion_user": {
      "bb760e2d-d679-4b64-b2a9-03005b21870a": {
        "role": "reader",
        "value": {
          "clipper_onboarding_completed": true,
          "email": "kkowalczyk@gmail.com",
          "family_name": "Kowalczyk",
          "given_name": "Krzysztof",
          "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "mobile_onboarding_completed": true,
          "onboarding_completed": true,
          "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
          "version": 182
        }
      }
    },
    "space": {}
  }
}
